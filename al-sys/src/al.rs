/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
pub const AL_INVALID: ::std::os::raw::c_int = -1;
pub const AL_NONE: ::std::os::raw::c_int = 0;
pub const AL_FALSE: ::std::os::raw::c_char = 0;
pub const AL_TRUE: ::std::os::raw::c_char = 1;
pub const AL_SOURCE_RELATIVE: ::std::os::raw::c_int = 514;
pub const AL_CONE_INNER_ANGLE: ::std::os::raw::c_int = 4097;
pub const AL_CONE_OUTER_ANGLE: ::std::os::raw::c_int = 4098;
pub const AL_PITCH: ::std::os::raw::c_int = 4099;
pub const AL_POSITION: ::std::os::raw::c_int = 4100;
pub const AL_DIRECTION: ::std::os::raw::c_int = 4101;
pub const AL_VELOCITY: ::std::os::raw::c_int = 4102;
pub const AL_LOOPING: ::std::os::raw::c_int = 4103;
pub const AL_BUFFER: ::std::os::raw::c_int = 4105;
pub const AL_GAIN: ::std::os::raw::c_int = 4106;
pub const AL_MIN_GAIN: ::std::os::raw::c_int = 4109;
pub const AL_MAX_GAIN: ::std::os::raw::c_int = 4110;
pub const AL_ORIENTATION: ::std::os::raw::c_int = 4111;
pub const AL_SOURCE_STATE: ::std::os::raw::c_int = 4112;
pub const AL_INITIAL: ::std::os::raw::c_int = 4113;
pub const AL_PLAYING: ::std::os::raw::c_int = 4114;
pub const AL_PAUSED: ::std::os::raw::c_int = 4115;
pub const AL_STOPPED: ::std::os::raw::c_int = 4116;
pub const AL_BUFFERS_QUEUED: ::std::os::raw::c_int = 4117;
pub const AL_BUFFERS_PROCESSED: ::std::os::raw::c_int = 4118;
pub const AL_REFERENCE_DISTANCE: ::std::os::raw::c_int = 4128;
pub const AL_ROLLOFF_FACTOR: ::std::os::raw::c_int = 4129;
pub const AL_CONE_OUTER_GAIN: ::std::os::raw::c_int = 4130;
pub const AL_MAX_DISTANCE: ::std::os::raw::c_int = 4131;
pub const AL_SEC_OFFSET: ::std::os::raw::c_int = 4132;
pub const AL_SAMPLE_OFFSET: ::std::os::raw::c_int = 4133;
pub const AL_BYTE_OFFSET: ::std::os::raw::c_int = 4134;
pub const AL_SOURCE_TYPE: ::std::os::raw::c_int = 4135;
pub const AL_STATIC: ::std::os::raw::c_int = 4136;
pub const AL_STREAMING: ::std::os::raw::c_int = 4137;
pub const AL_UNDETERMINED: ::std::os::raw::c_int = 4144;
pub const AL_FORMAT_MONO8: ::std::os::raw::c_int = 4352;
pub const AL_FORMAT_MONO16: ::std::os::raw::c_int = 4353;
pub const AL_FORMAT_STEREO8: ::std::os::raw::c_int = 4354;
pub const AL_FORMAT_STEREO16: ::std::os::raw::c_int = 4355;
pub const AL_FREQUENCY: ::std::os::raw::c_int = 8193;
pub const AL_BITS: ::std::os::raw::c_int = 8194;
pub const AL_CHANNELS: ::std::os::raw::c_int = 8195;
pub const AL_SIZE: ::std::os::raw::c_int = 8196;
pub const AL_UNUSED: ::std::os::raw::c_int = 8208;
pub const AL_PENDING: ::std::os::raw::c_int = 8209;
pub const AL_PROCESSED: ::std::os::raw::c_int = 8210;
pub const AL_NO_ERROR: ::std::os::raw::c_int = 0;
pub const AL_INVALID_NAME: ::std::os::raw::c_int = 40961;
pub const AL_INVALID_ENUM: ::std::os::raw::c_int = 40962;
pub const AL_INVALID_VALUE: ::std::os::raw::c_int = 40963;
pub const AL_INVALID_OPERATION: ::std::os::raw::c_int = 40964;
pub const AL_OUT_OF_MEMORY: ::std::os::raw::c_int = 40965;
pub const AL_VENDOR: ::std::os::raw::c_int = 45057;
pub const AL_VERSION: ::std::os::raw::c_int = 45058;
pub const AL_RENDERER: ::std::os::raw::c_int = 45059;
pub const AL_EXTENSIONS: ::std::os::raw::c_int = 45060;
pub const AL_DOPPLER_FACTOR: ::std::os::raw::c_int = 49152;
pub const AL_DOPPLER_VELOCITY: ::std::os::raw::c_int = 49153;
pub const AL_SPEED_OF_SOUND: ::std::os::raw::c_int = 49155;
pub const AL_DISTANCE_MODEL: ::std::os::raw::c_int = 53248;
pub const AL_INVERSE_DISTANCE: ::std::os::raw::c_int = 53249;
pub const AL_INVERSE_DISTANCE_CLAMPED: ::std::os::raw::c_int = 53250;
pub const AL_LINEAR_DISTANCE: ::std::os::raw::c_int = 53251;
pub const AL_LINEAR_DISTANCE_CLAMPED: ::std::os::raw::c_int = 53252;
pub const AL_EXPONENT_DISTANCE: ::std::os::raw::c_int = 53253;
pub const AL_EXPONENT_DISTANCE_CLAMPED: ::std::os::raw::c_int = 53254;
pub type ALboolean = ::std::os::raw::c_char;
pub type ALchar = ::std::os::raw::c_char;
pub type ALbyte = ::std::os::raw::c_char;
pub type ALubyte = ::std::os::raw::c_uchar;
pub type ALshort = ::std::os::raw::c_short;
pub type ALushort = ::std::os::raw::c_ushort;
pub type ALint = ::std::os::raw::c_int;
pub type ALuint = ::std::os::raw::c_uint;
pub type ALsizei = ::std::os::raw::c_int;
pub type ALenum = ::std::os::raw::c_int;
pub type ALfloat = f32;
pub type ALdouble = f64;
pub type ALvoid = ::std::os::raw::c_void;
pub type LPALENABLE =
    ::std::option::Option<extern "C" fn(capability: ALenum)>;
pub type LPALDISABLE =
    ::std::option::Option<extern "C" fn(capability: ALenum)>;
pub type LPALISENABLED =
    ::std::option::Option<extern "C" fn(capability: ALenum) -> ALboolean>;
pub type LPALGETSTRING =
    ::std::option::Option<extern "C" fn(param: ALenum) -> *const ALchar>;
pub type LPALGETBOOLEANV =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               values: *mut ALboolean)>;
pub type LPALGETINTEGERV =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               values: *mut ALint)>;
pub type LPALGETFLOATV =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               values: *mut ALfloat)>;
pub type LPALGETDOUBLEV =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               values: *mut ALdouble)>;
pub type LPALGETBOOLEAN =
    ::std::option::Option<extern "C" fn(param: ALenum) -> ALboolean>;
pub type LPALGETINTEGER =
    ::std::option::Option<extern "C" fn(param: ALenum) -> ALint>;
pub type LPALGETFLOAT =
    ::std::option::Option<extern "C" fn(param: ALenum) -> ALfloat>;
pub type LPALGETDOUBLE =
    ::std::option::Option<extern "C" fn(param: ALenum) -> ALdouble>;
pub type LPALGETERROR = ::std::option::Option<extern "C" fn() -> ALenum>;
pub type LPALISEXTENSIONPRESENT =
    ::std::option::Option<unsafe extern "C" fn(extname: *const ALchar)
                              -> ALboolean>;
pub type LPALGETPROCADDRESS =
    ::std::option::Option<unsafe extern "C" fn(fname: *const ALchar)
                              -> *mut ::std::os::raw::c_void>;
pub type LPALGETENUMVALUE =
    ::std::option::Option<unsafe extern "C" fn(ename: *const ALchar)
                              -> ALenum>;
pub type LPALLISTENERF =
    ::std::option::Option<extern "C" fn(param: ALenum, value: ALfloat)>;
pub type LPALLISTENER3F =
    ::std::option::Option<extern "C" fn(param: ALenum, value1: ALfloat,
                                        value2: ALfloat, value3: ALfloat)>;
pub type LPALLISTENERFV =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               values: *const ALfloat)>;
pub type LPALLISTENERI =
    ::std::option::Option<extern "C" fn(param: ALenum, value: ALint)>;
pub type LPALLISTENER3I =
    ::std::option::Option<extern "C" fn(param: ALenum, value1: ALint,
                                        value2: ALint, value3: ALint)>;
pub type LPALLISTENERIV =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               values: *const ALint)>;
pub type LPALGETLISTENERF =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               value: *mut ALfloat)>;
pub type LPALGETLISTENER3F =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               value1: *mut ALfloat,
                                               value2: *mut ALfloat,
                                               value3: *mut ALfloat)>;
pub type LPALGETLISTENERFV =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               values: *mut ALfloat)>;
pub type LPALGETLISTENERI =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               value: *mut ALint)>;
pub type LPALGETLISTENER3I =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               value1: *mut ALint,
                                               value2: *mut ALint,
                                               value3: *mut ALint)>;
pub type LPALGETLISTENERIV =
    ::std::option::Option<unsafe extern "C" fn(param: ALenum,
                                               values: *mut ALint)>;
pub type LPALGENSOURCES =
    ::std::option::Option<unsafe extern "C" fn(n: ALsizei,
                                               sources: *mut ALuint)>;
pub type LPALDELETESOURCES =
    ::std::option::Option<unsafe extern "C" fn(n: ALsizei,
                                               sources: *const ALuint)>;
pub type LPALISSOURCE =
    ::std::option::Option<extern "C" fn(source: ALuint) -> ALboolean>;
pub type LPALSOURCEF =
    ::std::option::Option<extern "C" fn(source: ALuint, param: ALenum,
                                        value: ALfloat)>;
pub type LPALSOURCE3F =
    ::std::option::Option<extern "C" fn(source: ALuint, param: ALenum,
                                        value1: ALfloat, value2: ALfloat,
                                        value3: ALfloat)>;
pub type LPALSOURCEFV =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum,
                                               values: *const ALfloat)>;
pub type LPALSOURCEI =
    ::std::option::Option<extern "C" fn(source: ALuint, param: ALenum,
                                        value: ALint)>;
pub type LPALSOURCE3I =
    ::std::option::Option<extern "C" fn(source: ALuint, param: ALenum,
                                        value1: ALint, value2: ALint,
                                        value3: ALint)>;
pub type LPALSOURCEIV =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum,
                                               values: *const ALint)>;
pub type LPALGETSOURCEF =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum,
                                               value: *mut ALfloat)>;
pub type LPALGETSOURCE3F =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum,
                                               value1: *mut ALfloat,
                                               value2: *mut ALfloat,
                                               value3: *mut ALfloat)>;
pub type LPALGETSOURCEFV =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum,
                                               values: *mut ALfloat)>;
pub type LPALGETSOURCEI =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum,
                                               value: *mut ALint)>;
pub type LPALGETSOURCE3I =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum,
                                               value1: *mut ALint,
                                               value2: *mut ALint,
                                               value3: *mut ALint)>;
pub type LPALGETSOURCEIV =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, param: ALenum,
                                               values: *mut ALint)>;
pub type LPALSOURCEPLAYV =
    ::std::option::Option<unsafe extern "C" fn(n: ALsizei,
                                               sources: *const ALuint)>;
pub type LPALSOURCESTOPV =
    ::std::option::Option<unsafe extern "C" fn(n: ALsizei,
                                               sources: *const ALuint)>;
pub type LPALSOURCEREWINDV =
    ::std::option::Option<unsafe extern "C" fn(n: ALsizei,
                                               sources: *const ALuint)>;
pub type LPALSOURCEPAUSEV =
    ::std::option::Option<unsafe extern "C" fn(n: ALsizei,
                                               sources: *const ALuint)>;
pub type LPALSOURCEPLAY =
    ::std::option::Option<extern "C" fn(source: ALuint)>;
pub type LPALSOURCESTOP =
    ::std::option::Option<extern "C" fn(source: ALuint)>;
pub type LPALSOURCEREWIND =
    ::std::option::Option<extern "C" fn(source: ALuint)>;
pub type LPALSOURCEPAUSE =
    ::std::option::Option<extern "C" fn(source: ALuint)>;
pub type LPALSOURCEQUEUEBUFFERS =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, nb: ALsizei,
                                               buffers: *const ALuint)>;
pub type LPALSOURCEUNQUEUEBUFFERS =
    ::std::option::Option<unsafe extern "C" fn(source: ALuint, nb: ALsizei,
                                               buffers: *mut ALuint)>;
pub type LPALGENBUFFERS =
    ::std::option::Option<unsafe extern "C" fn(n: ALsizei,
                                               buffers: *mut ALuint)>;
pub type LPALDELETEBUFFERS =
    ::std::option::Option<unsafe extern "C" fn(n: ALsizei,
                                               buffers: *const ALuint)>;
pub type LPALISBUFFER =
    ::std::option::Option<extern "C" fn(buffer: ALuint) -> ALboolean>;
pub type LPALBUFFERDATA =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, format: ALenum,
                                               data: *const ALvoid,
                                               size: ALsizei, freq: ALsizei)>;
pub type LPALBUFFERF =
    ::std::option::Option<extern "C" fn(buffer: ALuint, param: ALenum,
                                        value: ALfloat)>;
pub type LPALBUFFER3F =
    ::std::option::Option<extern "C" fn(buffer: ALuint, param: ALenum,
                                        value1: ALfloat, value2: ALfloat,
                                        value3: ALfloat)>;
pub type LPALBUFFERFV =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum,
                                               values: *const ALfloat)>;
pub type LPALBUFFERI =
    ::std::option::Option<extern "C" fn(buffer: ALuint, param: ALenum,
                                        value: ALint)>;
pub type LPALBUFFER3I =
    ::std::option::Option<extern "C" fn(buffer: ALuint, param: ALenum,
                                        value1: ALint, value2: ALint,
                                        value3: ALint)>;
pub type LPALBUFFERIV =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum,
                                               values: *const ALint)>;
pub type LPALGETBUFFERF =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum,
                                               value: *mut ALfloat)>;
pub type LPALGETBUFFER3F =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum,
                                               value1: *mut ALfloat,
                                               value2: *mut ALfloat,
                                               value3: *mut ALfloat)>;
pub type LPALGETBUFFERFV =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum,
                                               values: *mut ALfloat)>;
pub type LPALGETBUFFERI =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum,
                                               value: *mut ALint)>;
pub type LPALGETBUFFER3I =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum,
                                               value1: *mut ALint,
                                               value2: *mut ALint,
                                               value3: *mut ALint)>;
pub type LPALGETBUFFERIV =
    ::std::option::Option<unsafe extern "C" fn(buffer: ALuint, param: ALenum,
                                               values: *mut ALint)>;
pub type LPALDOPPLERFACTOR =
    ::std::option::Option<extern "C" fn(value: ALfloat)>;
pub type LPALDOPPLERVELOCITY =
    ::std::option::Option<extern "C" fn(value: ALfloat)>;
pub type LPALSPEEDOFSOUND =
    ::std::option::Option<extern "C" fn(value: ALfloat)>;
pub type LPALDISTANCEMODEL =
    ::std::option::Option<extern "C" fn(distanceModel: ALenum)>;
